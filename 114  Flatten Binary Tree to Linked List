/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        std::vector<TreeNode *> path;
        flatHelper(root,path);
        for(int i = 1;i<path.size();i++){
            path[i-1]->left = NULL;
            path[i-1]->right = path[i];
        }
    }
    private:
    void flatHelper(TreeNode* node,std::vector<TreeNode *> & path){
        if(!node){
            return;
        }
        path.push_back(node);
        flatHelper(node->left,path);
        flatHelper(node->right,path);
        //delete node;
        
    }
};
